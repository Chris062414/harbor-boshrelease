#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables
set -x

JOB_NAME=harbor
RUN_DIR=/var/vcap/sys/run/harbor
LOG_DIR=/var/vcap/sys/log/harbor
PIDFILE=${RUN_DIR}/pid
HARBOR_JOB_DIR=/var/vcap/jobs/harbor
HARBOR_PACKAGE_DIR=${HARBOR_JOB_DIR}/packages/harbor-app
COMPOSE_PACKAGE_DIR=${HARBOR_JOB_DIR}/packages/docker-compose
DOCKER_PACKAGE_DIR=${HARBOR_JOB_DIR}/packages/docker
HARBOR_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.yml
HARBOR_CLAIR_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.clair.yml
HARBOR_NOTARY_YAML=${HARBOR_PACKAGE_DIR}/docker-compose.notary.yml

source /var/vcap/packages/common/utils.sh

export PATH=$PATH:${DOCKER_PACKAGE_DIR}/bin
export PATH=$PATH:${COMPOSE_PACKAGE_DIR}/bin

exec 1>> $LOG_DIR/$JOB_NAME.stdout.log
exec 2>> $LOG_DIR/$JOB_NAME.stderr.log

echo $PATH

case $1 in

  start)
    pid_guard $PIDFILE "harbor"

    mkdir -p $RUN_DIR $LOG_DIR
    chown -R vcap:vcap $RUN_DIR $LOG_DIR

    harbor_config=${HARBOR_JOB_DIR}/config/harbor.cfg
    protocol=https
    hostname=reg.mydomain.com

    if [[ $(cat ${harbor_config}) =~ ui_url_protocol[[:blank:]]*=[[:blank:]]*(https?) ]] ; then
    	protocol=${BASH_REMATCH[1]}
    fi

    if [[ $(grep 'hostname[[:blank:]]*=' ${harbor_config}) =~ hostname[[:blank:]]*=[[:blank:]]*(.*) ]] ; then
    	hostname=${BASH_REMATCH[1]}
    fi

    echo $$ > $PIDFILE
    echo -n "Starting harbor at ${protocol}://${hostname}"

    COMPOSE_OPTS="-f ${HARBOR_YAML}"
    <% if_p("with_notary") do |withNotary| %>
      COMPOSE_OPTS="${COMPOSE_OPTS} -f ${HARBOR_NOTARY_YAML}"
    <% end %>

    <% if_p("with_clair") do |withClair| %>
      COMPOSE_OPTS="${COMPOSE_OPTS} -f ${HARBOR_CLAIR_YAML}"
    <% end %>

    docker-compose ${COMPOSE_OPTS} up
    ;;

  stop)
    echo -n "Stopping harbor: "
    kill_and_wait $PIDFILE
    ;;

  *)
    echo -n "Usage: ctl {start|stop}"
    ;;

esac
exit 0