#Function is used to register UAA client for harbor
register_harbor_uaa_client() {
  ####Register Harbor UAA client
  ####
  #Related files
  UAA_JSON_FILE=${HARBOR_JOB_DIR}/config/uaa.json
  UAA_CA_FILE=${HARBOR_JOB_DIR}/config/uaa_ca.crt

  #Build curl command prefix
  CURL_CMD="curl -k"
  if [ "$UAA_VERIFY_CERT" = "true" ] && [ -f $UAA_CA_FILE ]; then
    CURL_CMD="curl --cacert $UAA_CA_FILE"
  fi

  #Get OAuth admin token
  log "Getting access token from UAA server..."
  access_token=$($CURL_CMD "${UAA_SERVER_ADDRESS}/oauth/token" -X POST \
  -H 'Content-Type: application/x-www-form-urlencoded' \
  -H 'Accept: application/json' \
  -d "client_id=$UAA_ADMIN&client_secret=$UAA_ADMIN_SECRET&grant_type=client_credentials&token_format=opaque&response_type=token" | \
  readJson "access_token")

  log "Got access token:"
  echo "$access_token"

  #Try to get and check if the specified harbor uaa client existing
  log "Checking if Harbor UAA client id '$HARBOR_UAA_CLIENT_ID' existing"
  harbor_uaa_client_curled=$($CURL_CMD "${UAA_SERVER_ADDRESS}/oauth/clients/$HARBOR_UAA_CLIENT_ID" \
  -H "Authorization: Bearer $access_token" \
  -H 'Accept: application/json' | \
  readJson "client_id")

  #Existing
  if [ $harbor_uaa_client_curled = $HARBOR_UAA_CLIENT_ID ]; then
    log "Harbor UAA client id '$HARBOR_UAA_CLIENT_ID' existing, trying to clean"
    #Try to delete
    $CURL_CMD "${UAA_SERVER_ADDRESS}/oauth/clients/$HARBOR_UAA_CLIENT_ID" -X DELETE \
    -H "Authorization: Bearer $access_token" \
    -H 'Accept: application/json' | readJson "client_id" >/dev/null
  fi


  #Create harbor UAA client
  uaa_properties=$(cat $UAA_JSON_FILE)

  log "Registering Harbor UAA client '$HARBOR_UAA_CLIENT_ID'..."
  $CURL_CMD "${UAA_SERVER_ADDRESS}/oauth/clients" -X POST \
  -H 'Content-Type: application/json' \
  -H "Authorization: Bearer $access_token" \
  -H 'Accept: application/json' \
  -d "$uaa_properties" | readJson "client_id" >/dev/null
  
  log "Harbor UAA client '$HARBOR_UAA_CLIENT_ID' is successfully registered!"
  ###Register end
  ###
}